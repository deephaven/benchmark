# Run benchmarks on a remote system for the release the project is using
# - This workflow is reusable with run-type set to release or nightly
# - Scripts ending in "-local" run on the github runner
# - Scripts ending in "-remote" run are executed on the remote test server through ssh

name: Benchmark Test on Docker Deephaven

on:
  workflow_call:
    inputs:
      run-type:
        required: true
        type: string

jobs:
  process-benchmarks:

    runs-on: ubuntu-22.04
    env:
      SD: .github/scripts
      HOST: ${{secrets.BENCHMARK_HOST}}
      USER: ${{secrets.BENCHMARK_USER}}
      REPO: ${{github.repository}}
      BRANCH: ${{github.ref_name}}
      RUN_TYPE: ${{inputs.run-type}}

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Docker Pull Deephaven and Redpanda
      run: |
        cp .github/resources/${RUN_TYPE}-benchmark-docker-compose.yml docker-compose.yml
        docker compose pull

    - name: Docker Up Deephaven and Redpanda
      run: docker compose up -d

    - name: Build with Maven
      run: |
        mvn -B verify --file pom.xml
        rm -rf results
    
    - name: Setup Local and Remote Scripts
      run: |
        sudo chmod +x ${SD}/*
        ${SD}/setup-ssh-local.sh ${HOST} "${{secrets.BENCHMARK_KEY}}"

    - name: Run Remote Test Server Setup
      run: |
        ${SD}/run-ssh-local.sh ${HOST} ${USER} ${SD} setup-test-server-remote ${REPO} ${BRANCH} ${RUN_TYPE}

    - name: Run Remote Benchmark Artifact Build
      run: |
        ${SD}/run-ssh-local.sh ${HOST} ${USER} ${SD} build-benchmark-artifact-remote

    - name: Run Remote Benchmarks
      run: |
        ${SD}/run-ssh-local.sh ${HOST} ${USER} ${SD} run-benchmarks-remote ${RUN_TYPE}
        
    - name: Fetch Benchmark Results and Prepare for Upload
      run: |
        ${SD}/fetch-results-local.sh ${HOST} ${USER} ${RUN_TYPE}

    - name: Authorize GCloud Credentials
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{secrets.BENCHMARK_GCLOUD}}
        
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      
    - name: Backup Existing Benchmark Summary SVG
      run: |
        SUMMARY_PREFIX=gs://deephaven-benchmark/${RUN_TYPE}/benchmark-summary
        if gsutil stat ${SUMMARY_PREFIX}.svg &>/dev/null; then
          gsutil mv ${SUMMARY_PREFIX}.svg ${SUMMARY_PREFIX}.prev.svg &>/dev/null
        fi

    - name: Upload Benchmark Results to GCloud
      uses: google-github-actions/upload-cloud-storage@v1
      with:
        path: ${{env.RUN_TYPE}}
        destination: deephaven-benchmark
        
    - name: Sync GCloud with Demo NFS
      run: |
        gcloud compute ssh --zone "us-central1-a" --project "deephaven-oss" dhc-demo-nfs-client --command="gsutil -m -q rsync -r -d gs://deephaven-benchmark /nfs/deephaven-benchmark"
    - name: Publish Slack Notification Tables
      run: |
        ${SD}/run-publish-local.sh ${RUN_TYPE} "${{secrets.BENCHMARK_SLACK_CHANNEL}}" "${{secrets.BENCHMARK_SLACK_TOKEN}}" 

    - name: Archive Results
      uses: actions/upload-artifact@v3
      with:
        name: Benchmarks and Logs
        path: |
          ${{env.RUN_TYPE}}/**/*
          logs/**/*


